name: "build-images"
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
    - 'master'
    - 'arm'

jobs:
  all-image-build-success:
    needs:
    - docker-build
    runs-on: ubuntu-latest
    steps:
    - run: echo success
  docker-build:
    runs-on: ubuntu-latest
    strategy:
        fail-fast: false
        matrix:
            image:
            - ab
            - ack
            - ansible
            - ant
            - awscli
            - awslogs
            - azure-cli
            - bonnie++
            - cfn-create-or-update
            - cookiecutter
            - curl
            - date
            - dig
            - docker-cloud
            - drone
            - erd
            - ffmpeg
            - figlet
            - find
            - fortune
            - gawk
            - gnupg
            - helm
            - host
            - httpie
            - hugo
            - imagemagick
            - ionic
            - irssi
            - jfrog
            - jq
            - kubectl
            - kubeseal
            - lessc
            - lynx
            - mercurial
            - mitmproxy
            - mutt
            - nc
            - nkf
            - nmap
            - node
            - npm
            - oc
            - octodns-compare
            - octodns-dump
            - octodns-report
            - octodns-sync
            - octodns-validate
            - openshift-cli-v2
            - packer
            - par2
            - php
            - plantuml
            - pre-commit
            - proselint
            - pwgen
            - pygmentize
            - rar
            - review
            - seagull
            - sed
            - shellcheck
            - sl
            - socat
            - speedtest
            - terraform
            - terraform-docs
            - tflint
            - tfsec
            - the_silver_searcher
            - travis
            - unrar
            - vegeta
            - wget
            - whalesay
            - youtube-dl
    steps:
    - uses: actions/checkout@v1
    - run: |
        echo ::group::Setup Buildx
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker buildx create --use
        echo ::endgroup::
        echo ${{ secrets.DOCKER_HUB_PASSWORD }} | base64 -d | docker login --password-stdin -u matefarkas
        echo ::group::build image ${{ matrix.image }}:latest
          docker buildx build --platform linux/amd64,linux/arm/v7,linux/arm64/v8 -t matefarkas/whalebrew-${{ matrix.image }} -t matefarkas/whalebrew-alt-tag-${{ matrix.image }} ${{ matrix.image }}
        echo ::endgroup::
        if [ -e "${{ matrix.image }}/tags.yaml" ]; then
          for tag in $(cat "${{ matrix.image }}/tags.yaml" | docker run --rm -i whalebrew/yq  -r '.versions[]'); do
            echo ::group::build image ${{ matrix.image }}:${tag}
              docker buildx build --platform linux/amd64,linux/arm/v7,linux/arm64/v8 -t matefarkas/whalebrew-${{ matrix.image }}:${tag} -t matefarkas/whalebrew-alt-tag-${{ matrix.image }}:${tag} --build-arg VERSION=${tag} ${{ matrix.image }}
            echo ::endgroup::
          done
        fi
